swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/transactions/{accountId}/:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get Transactions for an Account
      description: API to retrieve all transactions for a specific account
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: The ID of the account
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionSummary'
        '400':
          description: Invalid Fields – The accountId format is incorrect
        '401':
          description: Unauthorized – Authentication token is missing or invalid
        '403':
          description: Forbidden – You do not have permission to access this account
        '404':
          description: Account not found
        '500':
          description: Internal Server Error


  /user/transaction/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get Transaction Details
      description: API to retrieve the details of a specific transaction
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: The ID of the transaction
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/TransactionDetails'
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

  /user/transaction/{transactionId}/note:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Add a Note to a Transaction
      description: API to add a note to a specific transaction
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: The ID of the transaction
        - in: body
          name: body
          required: true
          description: The note details to be added
          schema:
            $ref: '#/definitions/TransactionNote'
      responses:
        '200':
          description: Note added successfully
          schema:
            $ref: '#/definitions/TransactionNoteResponse'
        '400':
          description: Invalid Fields – The note format is incorrect
        '401':
          description: Unauthorized – Authentication token is missing or invalid
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error


securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  TransactionSummary:
    type: object
    properties:
      transactionId:
        type: string
        description: The unique identifier for the transaction.
      date:
        type: string
        format: date-time
        description: The date and time when the transaction occurred.
  TransactionDetails:
    type: object
    properties:
      transactionId:
        type: string
        description: The unique identifier for the transaction.
      amount:
        type: number
        format: double
        description: The amount of the transaction.
      date:
        type: string
        format: date-time
        description: The date and time when the transaction occurred.
      description:
        type: string
        description: A detailed description of the transaction.
      category:
        type: string
        description: The category assigned to the transaction.
      balance:
        type: number
        format: double
        description: The remaining balance after the transaction.
      type:
        type: string
        description: The type of transaction (e.g., deposit, withdrawal).
      note:
        type: string
        description: A note associated with the transaction.
  TransactionNote:
    properties:
      note:
        type: string
        description: The note to be added or updated for the transaction.
  TransactionNoteResponse:
    type: object
    properties:
      status:
        type: string
        description: The status of the operation (e.g., success).
        example: "success"
      message:
        type: string
        description: A message describing the result of the operation.
        example: "Note added successfully"
      transactionId:
        type: string
        description: The ID of the transaction the note is associated with.
        example: "txn_67890"
      content:
        type: string
        description: The content of the note.
        example: "This is a note for the transaction."
